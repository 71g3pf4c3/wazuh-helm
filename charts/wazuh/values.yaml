## @param nameOverride String to partially override the names of the components.
##
nameOverride: null
## @param fullnameOverride String to fully override the fullname of the components.
##
fullnameOverride: null
## @param autoreload if enabled annotations will be added to recreated the statefulset on config changes.
autoreload:
  enabled: false

## @section cert-manager This are the parameters for the official sub-chart for cert-manager, here you can set
## all available values of the official Chart. Ref: https://github.com/cert-manager/cert-manager/blob/master/deploy/charts/cert-manager/values.yaml
##
cert-manager:
  ## @param cert-manager.enabled this enabled or disables the sub-chart getting deployed.
  ##
  enabled: false
## @section certificates If cert-manager is present, the certificates can be generated automatically.
##
certificates:
  ## @param certificates.issuer possible configs for the issuer.
  ##
  issuer:
    ## @param certificates.issuer.name of the issuer used for signing the certificates. If this is null a new
    ## selfsigned issuer will be created with the chart.
    ##
    name: null
    ## @param certificates.issuer.type defines the type of the issuer, possible values are issuer and ClusterIssuer.
    ##
    type: issuer
  ## @param certificates.duration timeframe for validity of cert.
  ##
  duration: 2160h # 90d
  ## @param certificates.renewBefore timeframe before the cert gets renewed.
  ##
  renewBefore: 360h # 15d
  ## @param certificates.subject details mentioned in the certificate.
  ##
  subject:
    organization: Company
    country: US
    locality: California
## @section indexer configuration of the wazuh indexer.
##
indexer:
  ## @param indexer.replicas number of replicas used in statefulset.
  ##
  replicas: 3
  ## @param indexer.annotations additional annotations set on statefulset.
  ##
  annotations: {}
  ## @params indexer.service settings for svc resource.
  ##
  service:
    type: ClusterIP
    annotations: {}
    httpPort: 9200
    nodes: 9300
    metrics: 9600
  ## @param indexer.updateStrategy updateStrategy for the statefulset.
  ##
  updateStrategy: RollingUpdate
  ## @params indexer.images parameters for the image of the indexer.
  ##
  images:
    ## @param indexer.images.repository name of the image used. If you use your own image registry
    ## just enter the url for the image. E.g.: my.registry.de/registry/wazuh/wazuh-indexer
    ##
    repository: wazuh/wazuh-indexer
    ## @param indexer.images.tag Tag of the image.
    ##
    tag: "4.11.1"
    pullPolicy: IfNotPresent
    imagePullSecrets:
      enabled: false
      secret: {}
  ## @params indexer.resources Allows to configure the resources allocated to the indexer.
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ##
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      memory: 2Gi
  ## @params indexer.pdb Allows to configure the pod disruption budget of the indexer.
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    enabled: true
    maxUnavailable: 1
  ## @params indexer.livenessProbe Parameter to configure the livenessProbe.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  ##
  livenessProbe:
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
    initialDelaySeconds: 10
    tcpSocket:
      port: 9200
  ## @params indexer.readinessProbe Parameter to configure the readinessProbe.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  ##
  readinessProbe:
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
    initialDelaySeconds: 10
    tcpSocket:
      port: 9200
  ## @params indexer.securityContext Parameter to configure the securityContext of the pod.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    fsGroup: 1000
  ## @params indexer.networkPolicy Network Policies for restricting the traffic in the cluster.
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    enabled: true
  ## @params indexer.additionalEnv Possibility to define additional env vars in the pod.
  ## Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  ##
  additionalEnv: []

  config:
    opensearch: |-
      {{ include "wazuh.indexer.opensearchConfig" . }}
    internalUsers: |-
      {{ include "wazuh.indexer.internalUsers" . }}
    securityConfig: |-
      {{ include "wazuh.indexer.securityConfig" . }}
    rolesMapping: |-
      {{ include "wazuh.indexer.rolesMapping" . }}
    roles: |-
      {{ include "wazuh.indexer.roles" . }}

  env:
    OPENSEARCH_JAVA_OPTS: "-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true"
    CLUSTER_NAME: "wazuh"
    NETWORK_HOST: "0.0.0.0"
    DISABLE_INSTALL_DEMO_CONFIG: "true"

  plugins: []

  storageSize: 50Gi
  storageClass: null

  cred:
    existingSecret: ""
    username: "admin"
    password: "SecretPassword"

# Kibana for elasticsearch with Wazuh plugins pre-installed
dashboard:
  replicas: 1

  annotations: {}

  images:
    repository: wazuh/wazuh-dashboard
    tag: "4.11.1"
    pullPolicy: IfNotPresent
    updateStrategy: OnDelete

  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  pdb:
    enabled: false
    maxUnavailable: 1

  livenessProbe:
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
    initialDelaySeconds: 10
    httpGet:
      path: /api/status
      port: 5601

  readinessProbe:
    periodSeconds: 20
    timeoutSeconds: 5
    failureThreshold: 10
    successThreshold: 1
    initialDelaySeconds: 10
    httpGet:
      path: /api/status
      port: 5601

  securityContext: {}

  networkPolicy:
    enabled: true

  # with this you will be able to access kibana on http port instead of https
  # if you use Ambassador edgestack this is necessary becasue
  # with `true` route will close unexpectedly
  # when accessing via ambassador external url
  enable_ssl: false

  service:
    annotations: {}
    httpPort: 5601
    type: ClusterIP

  cred:
    existingSecret: ""
    username: "kibanaserver"
    password: "kibanaserver"

  additionalEnv: []

  config: |
    {{ include "wazuh.dashboard.config" . }}

  ingress:
    enabled: false
    className: ""
    tls: []
    # - secretName: wazuh-tls
    #   hosts:
    #     - wazuh.example.com
    annotations: {}
    host: "wazuh.example.com"

wazuh:
  syslog_enable: true
  key: "c98b62a9b6169ac5f67dae55ae4a9088"
  images:
    repository: wazuh/wazuh-manager
    tag: "4.11.1"
    pullSecret: regcred
    pullPolicy: IfNotPresent

  env:
    FILEBEAT_SSL_VERIFICATION_MODE: full

  service:
    annotations: {}
    port: 1516

  apiCred:
    # 3 Options:
    # 1. Set existing secret name
    # 2. Set username and password manually
    # 3. Let secret be generated automatically (all empty)
    existingSecret: ""
    username: "wazuh-wui"
    # The password must have a length between 8 and 64 characters and contain at least one upper and lower case letter, a number, and a symbol(.*+?-).
    password: "MyS3cr37P450r.*-"
  authd:
    existingSecret: ""
    pass: "password"

  initContainer:
    resources: {}

  localDecoder: |
    {{ include "wazuh.localDecoder" . }}
  localRules: |
    {{ include "wazuh.localRules" . }}
  internalOptions: |
    {{ include "wazuh.internalOptions" . }}

  agentGroupConf:
    - name: example
      agent: |
        <agent_config>
          <localfile>
            <location>journald</location>
            <log_format>journald</log_format>
          </localfile>
          <localfile>
            <location>/var/log/falco.log</location>
            <log_format>json</log_format>
          </localfile>
          <wodle name="docker-listener">
            <interval>10m</interval>
            <attempts>5</attempts>
            <run_on_start>no</run_on_start>
            <disabled>no</disabled>
          </wodle>
        </agent_config>

  master:
    annotations: {}

    service:
      type: ClusterIP
      annotations: {}
      ports:
        registration: 1515
        api: 55000

    resources:
      limits:
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

    livenessProbe: {}

    readinessProbe: {}

    securityContext:
      capabilities:
        add: ["SYS_CHROOT"]

    networkPolicy:
      enabled: true

    # If defined, storageClassName: <storageClass>
    # If set to "-", storageClassName: "", which disables dynamic provisioning
    # If undefined (the default) or set to null, no storageClassName spec is
    #   set, choosing the default provisioner.
    storageClass: null
    storageSize: 50Gi

    conf: |
      {{ include "wazuh.master.conf" . }}
    # To be appended to the master.conf
    extraConf: ""

  worker:
    replicas: 2

    annotations: {}

    service:
      type: ClusterIP
      annotations: {}
      ports:
        agentEvents: 1514

    resources:
      limits:
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

    pdb:
      enabled: true
      maxUnavailable: 1

    livenessProbe: {}

    readinessProbe: {}

    securityContext:
      capabilities:
        add: ["SYS_CHROOT"]

    networkPolicy:
      enabled: true

    storageClass: null
    storageSize: 50Gi

    conf: |
      {{ include "wazuh.worker.conf" . }}
    # To be appended to the worker.conf
    extraConf: ""
